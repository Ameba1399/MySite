import os
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.contrib.fsm_storage.memory import MemoryStorage

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
BOT_TOKEN = os.getenv('BOT_TOKEN')
ADMIN_ID = os.getenv('ADMIN_ID')

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
bot = Bot(token=BOT_TOKEN)
storage = MemoryStorage()
dp = Dispatcher(bot, storage=storage)
logging.basicConfig(level=logging.INFO)

# –ú–µ–Ω—é
main_menu = ReplyKeyboardMarkup(resize_keyboard=True).add(
    KeyboardButton('üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏'),
    KeyboardButton('üìù –û—Ç–∑—ã–≤—ã'),
    KeyboardButton('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏')
)

@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    if str(message.from_user.id) == ADMIN_ID:
        await message.answer("–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:", reply_markup=main_menu)
    else:
        await message.answer("–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω")

@dp.message_handler(text='üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏')
async def users_menu(message: types.Message):
    # –†–µ–∞–ª–∏–∑–∞—Ü–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
    pass

@dp.message_handler(text='üìù –û—Ç–∑—ã–≤—ã')
async def reviews_menu(message: types.Message):
    # –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –æ—Ç–∑—ã–≤–æ–≤
    pass

if __name__ == '__main__':
    from aiogram import executor
    executor.start_polling(dp)
